name: CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

env:
  BACK_IMAGE: photoservice
  IMG_PROCESSOR: image-processor
  LIBERATOR_BLOCKED_WORKER: liberator-blocked-worker
  RAW_IMAGE_HANDLER: raw-image-handler
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: script allow
        run: chmod +x ./scripts/frontend.sh
      - name: script allow
        run: ./scripts/frontend.sh

      - name: Fetch required Go modules
        run: go mod download

      - name: Build
        run: make build

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: debug
        run: ls && pwd && lscpu && free

      - name: build containers
        run: docker build -f Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $BACK_IMAGE) .
      - name: build containers
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $BACK_IMAGE)
      - name: build containers imageProcessor
        run: docker build -f Dockerfile-imageProcessor -t ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $IMG_PROCESSOR) . && docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $IMG_PROCESSOR)
      - name: build containers liberatorBlockedWorker
        run: docker build -f Dockerfile-liberatorBlockedWorker -t ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $LIBERATOR_BLOCKED_WORKER) . && docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $LIBERATOR_BLOCKED_WORKER)
      - name: build containers rawImageHandler
        run: docker build -f Dockerfile-rawImageHandler -t ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $RAW_IMAGE_HANDLER) . &&docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$(echo $RAW_IMAGE_HANDLER)

      #      - name: Build and push Docker image
      #        run: docker push
      #      id: docker_build
      #      uses: docker/build-push-action@v2
      #          with:
      #            push: true
      #            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest


      #      - name: Cache Docker layers
      #        uses: actions/cache@v2
      #        with:
      #          path: /tmp/.buildx-cache
      #          key: ${{ runner.os }}-buildx-${{ github.sha }}
      #          restore-keys: |
      #            ${{ runner.os }}-buildx-
      #      - name: Build Docker image
      #        uses: docker/build-push-action@v2
      #        with:
      #          push: false
      #          tags: ${{ github.event.repository.name }}:latest, ${{ github.repository }}:latest

      #      - name: Build Docker image
      #        uses: docker/build-push-action@v2
      #        with:
      #          builder: ${{ steps.buildx.outputs.name }}
      #          push: false
      #          load: true
      #          tags: ${{ github.event.repository.name }}:latest, ${{ github.repository }}:latest
      #          cache-from: type=local,src=/tmp/.buildx-cache
      #          cache-to: type=local,dest=/tmp/.buildx-cache

#      - name: Run functional tests
#        run: go test -v ./...

